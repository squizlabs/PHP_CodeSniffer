<?xml version="1.0"?>
<ruleset name="YL1">
 <description>The YL-1 coding standard.</description>
 <arg name="tab-width" value="4"/>

<rule ref="Generic.NamingConventions">
    <exclude name="Generic.NamingConventions.CamelCapsFunctionName" /> 
</rule>
<rule ref="PEAR.NamingConventions">
    <exclude name="PEAR.NamingConventions.ValidFunctionName" />
</rule>
<rule ref="PSR1.Methods">
    <exclude name="PSR1.Methods.CamelCapsMethodName" />
</rule>

<rule ref="PSR1.Classes">
    <exclude name="PSR1.Classes.ClassDeclaration" />
</rule>

 <rule ref="PSR2">
  <exclude name="PSR2.Methods.MethodDeclaration"/>
  <exclude name="PSR2.Classes.PropertyDeclaration"/>
  <exclude name="Zend.Files.ClosingTag"/>
 </rule>

 <!-- 2.2 Files -->

 <!-- All PHP files MUST use the Unix LF (linefeed) line ending. -->
 <rule ref="Generic.Files.LineEndings">
  <properties>
   <property name="eolChar" value="\n"/>
  </properties>
 </rule>

 <!-- All PHP files MUST end with a single blank line. -->
 <!-- checked in Files/EndFileNewlineSniff -->


 <!-- 2.3 Lines -->

 <rule ref="Generic.Files.LineLength">
  <properties>
   <property name="lineLimit" value="1200"/>
   <property name="absoluteLineLimit" value="0"/>
  </properties>
 </rule>

 <!-- There MUST NOT be trailing whitespace at the end of non-blank lines. -->
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
  <properties>
   <property name="ignoreBlankLines" value="true"/>
   </properties>
 </rule>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
  <severity>0</severity>
 </rule>

 <!-- There MUST NOT be more than one statement per line. -->
 <rule ref="Generic.Formatting.DisallowMultipleStatements"/>

 <!-- 2.4 Indenting -->

 <!-- Code MUST use an indent of 4 spaces, and MUST NOT use tabs for indenting. -->
 <rule ref="Generic.WhiteSpace.ScopeIndent">
  <properties>
   <property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG"/>
  </properties>
 </rule>
 <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

 <!-- 2.5 Keywords and True/False/Null -->

 <!-- PHP keywords MUST be in lower case. -->
 <rule ref="Generic.PHP.LowerCaseKeyword"/>

 <!-- The PHP constants true, false, and null MUST be in lower case. -->
 <rule ref="Generic.PHP.LowerCaseConstant"/>

 <!-- 3. Namespace and Use Declarations -->

 <!-- When present, there MUST be one blank line after the namespace declaration. -->
 <!-- checked in Namespaces/NamespaceDeclarationSniff -->

 <!-- When present, all use declarations MUST go after the namespace declaration.
      There MUST be one use keyword per declaration.
      There MUST be one blank line after the use block. -->
 <!-- checked in Namespaces/UseDeclarationSniff -->

 <!-- 4. Classes, Properties, and Methods -->

 <!-- 4.1. Extends and Implements -->

 <!-- The extends and implements keywords MUST be declared on the same line as the class name.
      The opening brace for the class go MUST go on its own line; the closing brace for the class MUST go on the next line after the body.
      Lists of implements MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one interface per line. -->
 <!-- checked in Classes/ClassDeclarationSniff -->

 <!-- 4.2. Properties -->

 <!-- Visibility MUST be declared on all properties.
      The var keyword MUST NOT be used to declare a property.
      There MUST NOT be more than one property declared per statement.
      Property names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->
 <!-- checked in Classes/PropertyDeclarationSniff -->

 <!-- 4.3 Methods -->

 <!-- Visibility MUST be declared on all methods. -->
 <rule ref="Squiz.Scope.MethodScope"/>
 <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

 <!-- Method names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->
 <!-- checked in Methods/MethodDeclarationSniff -->
 <rule ref="YL1.Methods.MethodDeclaration"/> 
 <rule ref="YL1.Classes.PropertyDeclaration"/> 
 
 <!-- Method names MUST NOT be declared with a space after the method name. The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. -->
 <rule ref="Squiz.Functions.FunctionDeclaration"/>
 <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>

 <!-- 4.4 Method Arguments -->

 <!-- In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
  <properties>
   <property name="equalsSpacing" value="1"/>
  </properties>
 </rule>
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
  <severity>0</severity>
 </rule>

 <rule ref="PEAR.Functions.ValidDefaultValue"/>

 <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>

 <rule ref="Squiz.ControlStructures.ControlSignature">
  <properties>
   <property name="ignoreComments" value="true"/>
  </properties>
 </rule>
 <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
 <rule ref="Generic.ControlStructures.InlineControlStructure"/>
</ruleset>
